stages:
  - test
  - build
  - deploy

include:
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/Container-Scanning.gitlab-ci.yml 

variables:
  STATIC_ADDRESS: "http://" # Address to deploy application
  SKIP_SAST: "false" # Ensure this is false to run SAST
  SKIP_CONTAINER_SCAN: "false" 
  SKIP_SCA: "false" # Ensure this is false to run SCA

  DEPENDENCY_SCANNING_DISABLED: 'false' # Variable for gitlab managed SCA
  SAST_DISABLED: 'false'
  CONTAINER_SCANNING_DISABLED: 'false'

unit_test:
  stage: test
  image: node:20.17.0-alpine
  script:
    - npm install
    - npm run test

sca:
  stage: test
  extends:
    - .ds-analyzer
    - .cyclonedx-reports
  rules:
    - if: '$SKIP_SCA == "true" || $SKIP_SCA == "1"'
      when: never
    - changes:
      - "src/*/"
  variables:
    DS_ANALYZER_NAME: "gemnasium"

sast_angular:
  extends: .sast-analyzer
  stage: test
  image:
    name: "$SAST_ANALYZER_IMAGE"
  variables:
    SEARCH_MAX_DEPTH: 20
    SAST_ANALYZER_IMAGE_TAG: '5'
    SAST_ANALYZER_IMAGE: "$SECURE_ANALYZERS_PREFIX/semgrep:$SAST_ANALYZER_IMAGE_TAG$SAST_IMAGE_SUFFIX"
  artifacts:
    paths:
      - gl-sast-report.json
    reports:
      sast: gl-sast-report.json
  rules:
    - if: '$SKIP_SAST == "true" || $SKIP_SAST == "1"'
      when: never
    - changes:
      - "src/*/"

docker-build-and-push:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - echo "Logging in to Docker Hub..."
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKER_USERNAME/angular_pipeline:latest .
    - echo "Pushing Docker image to Docker Hub..."
    - docker push $DOCKER_USERNAME/angular_pipeline:latest

